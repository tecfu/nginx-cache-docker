user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

events {
  # The maximum number of simultaneous connections that can be opened by
  # a worker process.
  worker_connections 1024;
}

http {
  # Includes mapping of file name extensions to MIME types of responses
  # and defines the default type.
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
 
  # Specifies the main log format.
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
      '$status $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';
 
  # Passthrough logs to docker
  access_log /dev/stdout main;
  error_log stderr debug;
 
  # error_log /var/log/nginx/error.log warn;
  # Sets the path, format, and configuration for a buffered log write.
  # access_log /var/log/nginx/access.log main;

  # Don't tell nginx version to clients.
  server_tokens off;

  # Specifies the maximum accepted body size of a client request, as
  # indicated by the request header Content-Length. If the stated content
  # length is greater than this size, then the client receives the HTTP
  # error code 413. Set to 0 to disable.
  client_max_body_size 1m;

  # Timeout for keep-alive connections. Server will close connections after
  # this time.
  keepalive_timeout 65;

  # Sendfile copies data between one FD and other from within the kernel,
  # which is more efficient than read() + write().
  sendfile on;

  # Don't buffer data-sends (disable Nagle algorithm).
  # Good for sending frequent small bursts of data in real time.
  tcp_nodelay on;

  # Causes nginx to attempt to send its HTTP response head in one packet,
  # instead of using partial frames.
  #tcp_nopush on;


  # Path of the file with Diffie-Hellman parameters for EDH ciphers.
  #ssl_dhparam /etc/ssl/nginx/dh2048.pem;

  # Specifies that our cipher suits should be preferred over client ciphers.
  ssl_prefer_server_ciphers on;

  # Enables a shared SSL cache with size that can hold around 8000 sessions.
  ssl_session_cache shared:SSL:2m;


  # Enable gzipping of responses.
  #gzip on;

  # Set the Vary HTTP header as defined in the RFC 2616.
  gzip_vary on;

  # Enable checking the existence of precompressed files.
  #gzip_static on;


  # ============================================================
  # Caching Proxy Settings
  # - everything up to point comes from default nginx Settings
  # ============================================================

  # Specifies the cache_status log format.
  log_format cache_status '[$time_local] "$request" $upstream_cache_status';
  # access_log /var/log/nginx/access.log cache_status;
  access_log /var/log/nginx/cache_access.log cache_status;

  # Proxy
  # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path
  # Store max 12GB for 1y of inactive resource
  proxy_cache_path /var/cache/nginx use_temp_path=off levels=1:2 keys_zone=cache_zone:100m max_size=${MAX_CACHE_SIZE} inactive=${CACHE_EXPIRATION};

  server {
    resolver 8.8.8.8;
    listen ${NGINX_PORT};

    location / {
      expires max;
      proxy_cache cache_zone;
      proxy_cache_valid 200 302 301 1y;
      proxy_cache_key $scheme://$host$request_uri;
      proxy_pass ${PROXY_PASS_ADDRESS};
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      add_header X-Cached $upstream_cache_status;
      add_header X-Cache-Server "tecfu/nginx-cache";
      proxy_ignore_headers "Set-Cookie";

      proxy_set_header Access-Control-Allow-Headers '*';
      proxy_set_header Access-Control-Allow-Origin '*';
      proxy_set_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
      proxy_set_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
    }
  }
}
